{"version":3,"sources":["config/config.js","note/note.jsx","noteform/noteform.jsx","App.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Note","id","this","props","handleRemove","_this","react_default","a","createElement","className","onClick","noteId","noteContent","Component","NoteForm","textInput","React","createRef","onSubmit","event","addNote","current","value","focus","preventDefault","type","placeholder","ref","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","content","db","push","set","child","remove","app","firebase","initializeApp","database","state","notes","_this2","on","snap","key","val","setState","i","length","splice","_this3","map","note","note_Note","noteform_noteform","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"iQASeA,UARF,CACLC,OAAO,0CACPC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,iBCLNC,+LAEJC,GACTC,KAAKC,MAAMC,aAAaH,oCAIpB,IAAAI,EAAAH,KACJ,OACII,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,QACIE,QAAS,WAAKL,EAAKD,aAAaC,EAAKF,MAAMQ,UAD/C,QAGAL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAIN,KAAKC,MAAMS,qBAdGC,cCgCnBC,UA/BA,SAACX,GACZ,IAAIY,EAAUC,IAAMC,YACpB,OACQX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,QACAU,SAAU,SAACC,GACHhB,EAAMiB,QAAQL,EAAUM,QAAQC,OAChCP,EAAUM,QAAQC,MAAM,GACxBP,EAAUM,QAAQE,QAClBJ,EAAMK,mBAGdlB,EAAAC,EAAAC,cAAA,SACIiB,KAAK,OACLC,YAAY,eACZC,IAAKZ,IAGTT,EAAAC,EAAAC,cAAA,8BCsEDoB,sBAlFX,SAAAA,IAAa,IAAAvB,EAAA,OAAAwB,OAAAC,EAAA,EAAAD,CAAA3B,KAAA0B,IACTvB,EAAAwB,OAAAE,EAAA,EAAAF,CAAA3B,KAAA2B,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAA/B,QAmCJkB,QAAU,SAAAc,GAEN7B,EAAK8B,GAAGC,OAAOC,IAAI,CAACzB,YAAYsB,KAtCvB7B,EAgDbD,aAAa,SAAAH,GACTI,EAAK8B,GAAGG,MAAMrC,GAAIsC,UA/ClBlC,EAAKmC,IAAIC,IAASC,cAAcjD,GAChCY,EAAK8B,GAAG9B,EAAKmC,IAAIG,WAAWhB,MAAMW,MAAM,SACxCjC,EAAKuC,MAAM,CACPC,MAAM,IALDxC,mFAiBM,IAAAyC,EAAA5C,KACR2C,EAAS3C,KAAK0C,MAAdC,MACP3C,KAAKiC,GAAGY,GAAG,cAAc,SAAAC,GACrBH,EAAMT,KAAK,CACPzB,OAAOqC,EAAKC,IACZrC,YAAYoC,EAAKE,MAAMtC,cAE3BkC,EAAKK,SAAS,CAACN,YAEnB3C,KAAKiC,GAAGY,GAAG,gBAAgB,SAAAC,GACvB,IAAK,IAAII,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAC1BP,EAAMO,GAAGzC,SAASqC,EAAKC,KACvBJ,EAAMS,OAAOF,EAAE,GAGvBN,EAAKK,SAAS,CAACN,6CAoBd,IAAAU,EAAArD,KACT,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,oBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEHP,KAAK0C,MAAMC,MAAMW,IAAI,SAAAC,GACjB,OACInD,EAAAC,EAAAC,cAACkD,EAAD,CACItD,aAAcmD,EAAKnD,aACnBO,OAAQ8C,EAAK9C,OACbC,YAAa6C,EAAK7C,YAClBqC,IAAKQ,EAAK9C,YAMlCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACmD,EAAD,CACIvC,QAASlB,KAAKkB,mBA3EZP,cCJlB+C,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.35c8445e.chunk.js","sourcesContent":["\nconst config={\n        apiKey:\"AIzaSyBSve48dFGZcLNObuI0hmAKHvU1Bo2Swn4\",\n        authDomain: \"notereact-2aa10.firebaseapp.com\",\n        databaseURL: \"https://notereact-2aa10.firebaseio.com\",\n        projectId: \"notereact-2aa10\",\n        storageBucket: \"notereact-2aa10.appspot.com\",\n        messagingSenderId: \"830722845998\"\n    }\nexport default config\n","import React, {Component}from'react'\nimport './note.css'\nexport default class Note extends Component{\n\n    handleRemove(id){\n        this.props.handleRemove(id)\n        //console.log(event)\n    }\n\n    render(){\n        return(\n            <div className='Note'>\n                <span\n                    onClick={()=>{this.handleRemove(this.props.noteId)}}\n                >&times;</span>\n                <br/>\n                <p>{this.props.noteContent}</p>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport './noteform.css'\n\nconst NoteForm=(props)=>{\n    let textInput=React.createRef()\n    return(\n            <div className='NoteForm'>\n                <form\n                onSubmit={(event)=>{\n                        props.addNote(textInput.current.value)\n                        textInput.current.value=''\n                        textInput.current.focus()\n                        event.preventDefault()\n                    }}\n                >\n                <input\n                    type='text'\n                    placeholder='write a note'\n                    ref={textInput}\n                    //onSubmit={()=>props.addNote(textInput)}\n                />\n                <button\n                    /*onClick={()=>{\n                        props.addNote(textInput.current.value)\n                        textInput.current.value=''\n                        textInput.current.focus()\n                        textInput.current.preventDefault()\n                    }}*/\n                >Add Note</button>\n                </form>\n            </div>\n        )\n}\n\nexport default NoteForm\n","import React, { Component } from 'react'\nimport firebase from 'firebase'\nimport 'firebase/database'\nimport config from './config/config.js'\nimport Note from './note/note'\nimport NoteForm from './noteform/noteform'\nimport './App.css'\n\nclass App extends Component {\n    constructor(){\n        super()\n        this.app=firebase.initializeApp(config)\n        this.db=this.app.database().ref().child('notes')\n        this.state={\n            notes:[\n                /*{\n                    noteId:1,\n                    noteContent:'note 1'\n                },\n                {\n                    noteId:2,\n                    noteContent:'note 2'\n                }*/\n            ]\n        }\n    }\n    componentDidMount(){\n        const {notes} = this.state\n        this.db.on('child_added',snap=>{\n            notes.push({\n                noteId:snap.key,\n                noteContent:snap.val().noteContent\n            })\n            this.setState({notes})\n        })\n        this.db.on('child_removed',snap=>{\n            for (let i = 0; i < notes.length; i++) {\n                if (notes[i].noteId===snap.key) {\n                    notes.splice(i,1)\n                }\n            }\n            this.setState({notes})\n        })\n        //this.setState({notes})\n    }\n    addNote = content =>{\n        //console.log(content)\n        this.db.push().set({noteContent:content})\n        /*let {notes}=this.state\n        notes.push({\n            noteId:notes.length+1,\n            noteContent:event\n        })\n        this.setState({\n            notes\n        })*/\n    }\n    handleRemove=id=>{\n        this.db.child(id).remove()\n    }\n\n    render() {\n    return (\n      <div className=\"notesContainer\">\n        <div className='notesHeader'>\n            <h1>Notes</h1>\n        </div>\n        <div className='notesBody'>\n                {\n                    this.state.notes.map(note=>{\n                        return(\n                            <Note\n                                handleRemove={this.handleRemove}\n                                noteId={note.noteId}\n                                noteContent={note.noteContent}\n                                key={note.noteId}\n                            />\n                        )\n                    })\n                }\n        </div>\n        <div className='notesFooter'>\n            <NoteForm\n                addNote={this.addNote}\n            />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PW\n"],"sourceRoot":""}